<article class="flex flex-col items-center justify-center gap-8 text-gray-700 dark:text-gray-300">
  <div class="w-full max-w-6xl px-4">
    <!-- Campo de búsqueda para filtrar por nombre -->
    <input
      type="text"
      id="search"
      placeholder="Search by name..."
      class="mb-4 p-2 border rounded w-full bg-black/80 text-white"
    />

    <div class="relative overflow-x-auto shadow-md sm:rounded-lg">
      <table class="w-full text-sm text-left text-gray-500 dark:text-gray-400">
        <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
          <tr>
            <th class="px-6 py-3">Machine Name</th>
            <!-- Columna Difficulty con dropdown -->
            <th class="px-6 py-3 relative">
              <button id="difficulty-toggle" class="flex items-center focus:outline-none cursor-pointer">
                <span id="difficulty-label">DIFFICULTY</span>
                <svg class="ml-1 w-4 h-4 cursor-pointer" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                </svg>
              </button>
              <!-- Opciones del dropdown de Difficulty -->
              <div id="difficulty-options" class="absolute hidden mt-2 w-32 bg-white dark:bg-gray-700 border rounded shadow-lg z-10">
                <button data-value="" class="difficulty-option block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-600">
                  All
                </button>
                <button data-value="Easy" class="difficulty-option block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-600">
                  Easy
                </button>
                <button data-value="Medium" class="difficulty-option block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-600">
                  Medium
                </button>
                <button data-value="Hard" class="difficulty-option block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-600">
                  Hard
                </button>
              </div>
            </th>
            <!-- Columna Platform con dropdown -->
            <th class="px-6 py-3 relative">
              <button id="platform-toggle" class="flex items-center focus:outline-none cursor-pointer">
                <span id="platform-label">PLATFORM</span>
                <svg class="ml-1 w-4 h-4 cursor-pointer" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                </svg>
              </button>
              <!-- Opciones del dropdown de Platform -->
              <div id="platform-options" class="absolute hidden mt-2 w-40 bg-white dark:bg-gray-700 border rounded shadow-lg z-10">
                <button data-value="" class="platform-option block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-600">
                  All
                </button>
                <button data-value="Hack The Box" class="platform-option block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-600">
                  Hack The Box
                </button>
                <button data-value="Vulnhub" class="platform-option block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-600">
                  Vulnhub
                </button>
                <button data-value="DockerLabs" class="platform-option block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-600">
                  DockerLabs
                </button>
              </div>
            </th>
            <th class="px-6 py-3">Link</th>
            <th class="px-6 py-3">Write-Up</th>
          </tr>
        </thead>
        <tbody id="table-body"></tbody>
      </table>

      <!-- Paginación -->
      <nav class="flex items-center justify-between pt-4">
        <span class="text-sm text-gray-500 dark:text-gray-400">
          Showing <strong id="page-range" class="text-gray-900 dark:text-white"></strong> of 
          <strong id="total-items" class="text-gray-900 dark:text-white">4</strong>
        </span>
        <ul class="inline-flex items-center">
          <li>
            <button id="prev-page" class="px-3 py-1 border rounded-l-lg dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-100 disabled:opacity-50" disabled>
              Previous
            </button>
          </li>
          <li>
            <button id="next-page" class="px-3 py-1 border rounded-r-lg dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-100 disabled:opacity-50">
              Next
            </button>
          </li>
        </ul>
      </nav>
    </div>
  </div>
</article>

<script>
  let currentPage = 1;
  const itemsPerPage = 5;
  let selectedDifficulty = "";
  let selectedPlatform = "";

  // Lista de productos personalizados
  const products = [
    { name: "Gigachad", difficulty: "Easy", platform: "Vulnhub", machine: "https://www.vulnhub.com/entry/gigachad-1,657/", writeup: "/machines/Gigachad" },
    { name: "Mercury", difficulty: "Easy", platform: "Vulnhub", machine: "https://www.vulnhub.com/entry/the-planets-mercury,544/", writeup: "/machines/Mercury" },
    { name: "Psycho", difficulty: "Easy", platform: "DockerLabs", machine: "https://dockerlabs.es/", writeup: "/machines/Psycho" },
    { name: "Pequeñas Mentirosas", difficulty: "Easy", platform: "DockerLabs", machine: "https://dockerlabs.es/", writeup: "/machines/Pequenas-Mentirosas" }
  ];

  let filteredProducts = products;

  function updateTotalItems() {
    document.getElementById("total-items").textContent = filteredProducts.length;
  }

  // Filtra productos según nombre, difficulty y platform
  function filterProducts() {
    const searchQuery = document.getElementById("search").value.toLowerCase();
    filteredProducts = products.filter(product => {
      const matchesName = product.name.toLowerCase().includes(searchQuery);
      const matchesDifficulty = selectedDifficulty === "" || product.difficulty === selectedDifficulty;
      const matchesPlatform = selectedPlatform === "" || product.platform === selectedPlatform;
      return matchesName && matchesDifficulty && matchesPlatform;
    });
    currentPage = 1;
    updateTotalItems();
    loadTable();
  }

  function loadTable() {
    const tableBody = document.getElementById("table-body");
    tableBody.innerHTML = "";
    
    const totalItems = filteredProducts.length;
    const totalPages = Math.ceil(totalItems / itemsPerPage);
    const start = (currentPage - 1) * itemsPerPage;
    const end = Math.min(currentPage * itemsPerPage, totalItems);
    
    for (let i = start; i < end; i++) {
      const product = filteredProducts[i];
      if (!product) break;
      const row = document.createElement("tr");
      row.className = "bg-white border-b dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-600";
      row.innerHTML = `
        <td class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">${product.name}</td>
        <td class="px-6 py-4">${product.difficulty}</td>
        <td class="px-6 py-4">${product.platform}</td>
        <td class="px-6 py-4">
          <a href="${product.machine}" class="font-medium text-blue-600 dark:text-blue-400 hover:underline">Machine</a>
        </td>
        <td class="px-6 py-4">
          <a href="${product.writeup}" class="font-medium text-green-600 dark:text-green-500 hover:underline">Write-Up</a>
        </td>
      `;
      tableBody.appendChild(row);
    }

    document.getElementById("page-range").textContent = `${totalItems === 0 ? 0 : start + 1}-${end}`;
    document.getElementById("prev-page").disabled = currentPage === 1;
    document.getElementById("next-page").disabled = currentPage === totalPages || totalPages === 0;
  }

  // Dropdown Difficulty
  document.getElementById("difficulty-toggle").addEventListener("click", function(e) {
    e.stopPropagation();
    document.getElementById("difficulty-options").classList.toggle("hidden");
  });
  document.querySelectorAll(".difficulty-option").forEach(option => {
    option.addEventListener("click", function(e) {
      selectedDifficulty = this.getAttribute("data-value");
      document.getElementById("difficulty-label").textContent = selectedDifficulty === "" ? "DIFFICULTY" : selectedDifficulty;
      document.getElementById("difficulty-options").classList.add("hidden");
      filterProducts();
    });
  });

  // Dropdown Platform
  document.getElementById("platform-toggle").addEventListener("click", function(e) {
    e.stopPropagation();
    document.getElementById("platform-options").classList.toggle("hidden");
  });
  document.querySelectorAll(".platform-option").forEach(option => {
    option.addEventListener("click", function(e) {
      selectedPlatform = this.getAttribute("data-value");
      document.getElementById("platform-label").textContent = selectedPlatform === "" ? "PLATFORM" : selectedPlatform;
      document.getElementById("platform-options").classList.add("hidden");
      filterProducts();
    });
  });

  // Cierra ambos dropdowns al hacer clic fuera
  document.addEventListener("click", function(e) {
    const diffDropdown = document.getElementById("difficulty-options");
    const platDropdown = document.getElementById("platform-options");
    if (!diffDropdown.contains(e.target) && !document.getElementById("difficulty-toggle").contains(e.target)) {
      diffDropdown.classList.add("hidden");
    }
    if (!platDropdown.contains(e.target) && !document.getElementById("platform-toggle").contains(e.target)) {
      platDropdown.classList.add("hidden");
    }
  });

  // Listener para el campo de búsqueda
  document.getElementById("search").addEventListener("input", filterProducts);

  document.getElementById("prev-page").addEventListener("click", () => {
    if (currentPage > 1) {
      currentPage--;
      loadTable();
    }
  });

  document.getElementById("next-page").addEventListener("click", () => {
    const totalItems = filteredProducts.length;
    const totalPages = Math.ceil(totalItems / itemsPerPage);
    if (currentPage < totalPages) {
      currentPage++;
      loadTable();
    }
  });

  // Inicialización
  updateTotalItems();
  loadTable();
</script>
